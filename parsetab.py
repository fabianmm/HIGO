
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'c_int c_decimal c_string id equal plus minus times divide gt ge lt le ee ne semicolon comma lk rk lb rb lp rp and function false int decimal print list or var while program bool readto not return else true void ifPROGRAM : SEM_CODE_STARTS DECLARATIONS FUNCTIONS program id SEM_PROGRAM_STARTS BLOCK SEM_FILL_ERAS SEM_PROGRAM_ENDDECLARATIONS : VARDEC DECLARATIONS\n                    | LISTDEC DECLARATIONS\n                    | emptyVARDEC : var TYPE VARIDS semicolonVARIDS : id SEM_ADD_VAR\n              | id SEM_ADD_VAR comma VARIDSLISTDEC : list TYPE VARIDS semicolonTYPE : int SEM_STORE_TYPE\n            | decimal SEM_STORE_TYPE\n            | bool SEM_STORE_TYPEFUNCTIONS : FUNCTION FUNCTIONS\n                 | emptyFUNCTION : function FUNCTYPE id SEM_ADD_FUNC lp FUNCPARAMETERS rp lk DECLARATIONS SEM_ADD_FUNC_START STATEMENTS rk SEM_END_FUNCFUNCTYPE : void SEM_STORE_TYPE\n                | TYPEFUNCPARAMETERS : TYPE id SEM_ADD_PARAM\n                      | TYPE id SEM_ADD_PARAM comma FUNCPARAMETERS\n                      | emptyBLOCK : lk STATEMENTS rkSTATEMENTS : STATEMENT STATEMENTS\n                  | emptySTATEMENT : ASSIGN\n                 | READ\n                 | PRINT\n                 | FUNCCALL\n                 | CONDITION\n                 | LOOP \n                 | RETURNASSIGN : id SEM_PUSH_OPERAND LISTINDEX equal SEM_PUSH_OPERATOR EXPRESSION SEM_ASSIGN semicolonLISTINDEX : lb EXP rb LISTINDEX\n                 | emptyREAD : readto SEM_PUSH_OPERATOR lp id SEM_PUSH_OPERAND SEM_GEN_READ rp semicolonPRINT : print SEM_PUSH_OPERATOR lp EXPRESSION rp SEM_PRINT semicolonFUNCCALL : id SEM_VERIFY_FUNC lp SEM_GEN_ERA CALLPARAMETERS rp SEM_VERIFY_NUM_PARAMS semicolon SEM_GEN_GOSUBCALLPARAMETERS : EXPRESSION SEM_MATCH_PARAM\n                      | EXPRESSION SEM_MATCH_PARAM comma CALLPARAMETERS\n                      | emptyCONDITION : if lp EXPRESSION rp SEM_GEN_GOTOF BLOCK ELSEBLOCK SEM_FILL_ENDELSEBLOCK : else SEM_GENANDFILL_GOTO BLOCK\n                 | emptyLOOP : while SEM_PUSH_START lp EXPRESSION rp SEM_GEN_GOTOF BLOCK SEM_FILL_LOOPRETURN : return EXPRESSION SEM_RETURN semicolonEXPRESSION : NOT SUPEREXP SEM_RESOLVE_NOT\n                  | NOT SUPEREXP SEM_RESOLVE_NOT and SEM_PUSH_OPERATOR NOT SUPEREXP SEM_RESOLVE_NOT SEM_RESOLVE_ANDOR\n                  | NOT SUPEREXP SEM_RESOLVE_NOT or SEM_PUSH_OPERATOR NOT SUPEREXP SEM_RESOLVE_NOT SEM_RESOLVE_ANDORNOT : not SEM_PUSH_OPERATOR\n           | emptySUPEREXP : EXP\n                | EXP RELOP EXP SEM_RESOLVE_RELOPRELOP : gt SEM_PUSH_OPERATOR\n             | ge SEM_PUSH_OPERATOR\n             | lt SEM_PUSH_OPERATOR\n             | le SEM_PUSH_OPERATOR\n             | ee SEM_PUSH_OPERATOR\n             | ne SEM_PUSH_OPERATOREXP : TERM SEM_RESOLVE_PLUSMINUS\n           | TERM SEM_RESOLVE_PLUSMINUS plus SEM_PUSH_OPERATOR EXP\n           | TERM SEM_RESOLVE_PLUSMINUS minus SEM_PUSH_OPERATOR EXPTERM : FACTOR SEM_RESOLVE_TIMESDIVIDE\n            | FACTOR SEM_RESOLVE_TIMESDIVIDE times SEM_PUSH_OPERATOR TERM\n            | FACTOR SEM_RESOLVE_TIMESDIVIDE divide SEM_PUSH_OPERATOR TERMFACTOR : lp SEM_PUSH_PAREN EXPRESSION rp SEM_POP_PAREN\n              | CONSTANT\n              | plus CONSTANT\n              | minus CONSTANTCONSTANT : id SEM_PUSH_OPERAND LISTINDEX\n                | id SEM_VERIFY_FUNC lp SEM_PUSH_PAREN SEM_GEN_ERA CALLPARAMETERS rp SEM_POP_PAREN SEM_VERIFY_NUM_PARAMS SEM_GEN_GOSUB_ASSIGN\n                | c_int SEM_PUSH_CONSTANT\n                | c_decimal SEM_PUSH_CONSTANT\n                | c_string SEM_PUSH_CONSTANT\n                | false SEM_PUSH_CONSTANT\n                | true SEM_PUSH_CONSTANTempty :SEM_CODE_STARTS : emptySEM_PROGRAM_STARTS : emptySEM_STORE_TYPE : emptySEM_ADD_FUNC : emptySEM_END_FUNC : emptySEM_GEN_READ : emptySEM_ADD_VAR : emptySEM_PUSH_OPERAND : emptySEM_PUSH_OPERATOR : emptySEM_RESOLVE_PLUSMINUS : emptySEM_RESOLVE_TIMESDIVIDE : emptySEM_PUSH_PAREN : emptySEM_POP_PAREN : emptySEM_ASSIGN : emptySEM_PUSH_CONSTANT : emptySEM_PRINT : emptySEM_RESOLVE_RELOP : emptySEM_RESOLVE_ANDOR : emptySEM_RESOLVE_NOT : emptySEM_GEN_GOTOF : emptySEM_GENANDFILL_GOTO : emptySEM_FILL_END : emptySEM_PUSH_START : emptySEM_FILL_LOOP : emptySEM_ADD_PARAM : emptySEM_ADD_FUNC_START : emptySEM_VERIFY_FUNC : emptySEM_GEN_ERA : emptySEM_MATCH_PARAM : emptySEM_VERIFY_NUM_PARAMS : emptySEM_GEN_GOSUB : emptySEM_GEN_GOSUB_ASSIGN : emptySEM_RETURN : emptySEM_PROGRAM_END : emptySEM_FILL_ERAS : empty'
    
_lr_action_items = {'and':([79,96,101,102,103,104,105,106,108,109,110,111,113,134,135,136,138,139,140,143,144,145,146,147,148,149,150,151,159,168,174,187,195,196,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,-49,-74,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,179,-93,-65,-60,-85,-66,-74,-74,-67,-31,-50,-91,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'gt':([79,96,101,102,103,104,105,106,108,109,110,113,134,135,136,138,139,140,143,144,145,148,149,150,151,159,174,187,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,127,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,-65,-60,-85,-66,-74,-67,-31,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'false':([64,75,80,82,83,84,92,94,97,99,100,107,112,114,122,123,124,127,128,129,130,131,132,133,141,142,160,163,167,169,170,171,172,173,175,176,177,179,180,181,182,197,198,199,201,202,203,204,212,217,222,223,],[-74,-83,-74,-74,-48,103,-74,103,-74,-74,-47,-74,103,103,-74,-74,-102,-74,103,-74,-74,-74,-74,-74,-74,-86,-74,-48,-51,-55,-53,-56,-52,-54,-74,-74,-74,-74,-74,-74,-74,-74,103,103,-74,-74,103,103,-74,-74,103,103,]),'divide':([79,96,101,103,104,106,108,109,110,113,134,135,136,140,143,144,145,148,149,150,151,159,174,187,200,211,220,221,244,247,251,252,253,],[-82,-32,-64,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-73,-71,-69,-70,-65,181,-85,-66,-74,-67,-31,-74,-104,-63,-87,-74,-74,-74,-68,-106,]),'semicolon':([30,31,32,37,38,48,79,85,96,101,102,103,104,105,106,108,109,110,111,113,115,116,134,135,136,138,139,140,143,144,145,146,147,148,149,150,151,159,166,168,174,187,188,189,193,194,195,196,200,207,208,209,210,211,218,219,220,221,224,225,239,240,244,245,246,247,248,249,250,251,252,253,],[36,-74,39,-6,-81,-7,-82,-74,-32,-64,-49,-74,-74,-74,-74,-74,-74,-74,-74,-74,152,-107,-89,-72,-74,-57,-84,-73,-71,-69,-70,-44,-93,-65,-60,-85,-66,-74,-74,-74,-67,-31,-74,-74,216,-90,-50,-91,-74,230,-88,231,232,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-74,-74,-74,-45,-92,-46,-74,-68,-106,]),'int':([6,9,11,45,117,],[15,15,15,15,15,]),'ne':([79,96,101,102,103,104,105,106,108,109,110,113,134,135,136,138,139,140,143,144,145,148,149,150,151,159,174,187,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,131,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,-65,-60,-85,-66,-74,-67,-31,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'ge':([79,96,101,102,103,104,105,106,108,109,110,113,134,135,136,138,139,140,143,144,145,148,149,150,151,159,174,187,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,132,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,-65,-60,-85,-66,-74,-67,-31,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'comma':([31,37,38,70,79,89,90,96,101,102,103,104,105,106,108,109,110,111,113,134,135,136,138,139,140,143,144,145,146,147,148,149,150,151,159,162,168,174,187,190,191,195,196,200,211,218,219,220,221,224,225,239,240,244,245,246,247,248,249,250,251,252,253,],[-74,44,-81,-74,-82,117,-99,-32,-64,-49,-74,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,-44,-93,-65,-60,-85,-66,-74,-74,-74,-67,-31,212,-103,-50,-91,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-74,-74,-74,-45,-92,-46,-74,-68,-106,]),'readto':([4,7,8,10,19,36,39,46,53,56,57,60,62,63,65,67,72,91,118,152,154,155,192,206,213,214,216,228,229,230,231,232,234,235,241,242,243,],[-74,-4,-74,-2,-3,-8,-5,55,-24,-25,-29,-26,-23,-27,55,-28,-20,-74,-74,-43,55,-100,-74,-74,-74,-41,-34,-42,-98,-33,-30,-74,-96,-39,-35,-105,-40,]),'times':([79,96,101,103,104,106,108,109,110,113,134,135,136,140,143,144,145,148,149,150,151,159,174,187,200,211,220,221,244,247,251,252,253,],[-82,-32,-64,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-73,-71,-69,-70,-65,182,-85,-66,-74,-67,-31,-74,-104,-63,-87,-74,-74,-74,-68,-106,]),'id':([4,7,8,10,15,16,17,18,19,20,21,22,23,24,26,27,28,29,34,36,39,44,46,49,53,56,57,60,62,63,64,65,67,72,75,80,82,83,84,91,92,93,94,97,99,100,107,112,114,118,122,123,124,127,128,129,130,131,132,133,141,142,152,154,155,160,163,167,169,170,171,172,173,175,176,177,179,180,181,182,192,197,198,199,201,202,203,204,206,212,213,214,216,217,222,223,228,229,230,231,232,234,235,241,242,243,],[-74,-4,-74,-2,-74,-74,-74,31,-3,31,-16,33,-74,35,-9,-77,-10,-11,-15,-8,-5,31,58,70,-24,-25,-29,-26,-23,-27,-74,58,-28,-20,-83,-74,-74,-48,104,-74,-74,120,104,-74,-74,-47,-74,104,104,-74,-74,-74,-102,-74,104,-74,-74,-74,-74,-74,-74,-86,-43,58,-100,-74,-48,-51,-55,-53,-56,-52,-54,-74,-74,-74,-74,-74,-74,-74,-74,-74,104,104,-74,-74,104,104,-74,-74,-74,-41,-34,-74,104,104,-42,-98,-33,-30,-74,-96,-39,-35,-105,-40,]),'if':([4,7,8,10,19,36,39,46,53,56,57,60,62,63,65,67,72,91,118,152,154,155,192,206,213,214,216,228,229,230,231,232,234,235,241,242,243,],[-74,-4,-74,-2,-3,-8,-5,59,-24,-25,-29,-26,-23,-27,59,-28,-20,-74,-74,-43,59,-100,-74,-74,-74,-41,-34,-42,-98,-33,-30,-74,-96,-39,-35,-105,-40,]),'le':([79,96,101,102,103,104,105,106,108,109,110,113,134,135,136,138,139,140,143,144,145,148,149,150,151,159,174,187,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,133,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,-65,-60,-85,-66,-74,-67,-31,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'lb':([58,77,79,104,136,159,],[-74,94,-82,-74,94,94,]),'c_int':([64,75,80,82,83,84,92,94,97,99,100,107,112,114,122,123,124,127,128,129,130,131,132,133,141,142,160,163,167,169,170,171,172,173,175,176,177,179,180,181,182,197,198,199,201,202,203,204,212,217,222,223,],[-74,-83,-74,-74,-48,109,-74,109,-74,-74,-47,-74,109,109,-74,-74,-102,-74,109,-74,-74,-74,-74,-74,-74,-86,-74,-48,-51,-55,-53,-56,-52,-54,-74,-74,-74,-74,-74,-74,-74,-74,109,109,-74,-74,109,109,-74,-74,109,109,]),'lk':([35,42,43,71,125,156,164,165,184,215,236,237,],[-74,-76,46,91,-74,-74,46,-94,46,-74,46,-95,]),'ee':([79,96,101,102,103,104,105,106,108,109,110,113,134,135,136,138,139,140,143,144,145,148,149,150,151,159,174,187,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,129,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,-65,-60,-85,-66,-74,-67,-31,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'lt':([79,96,101,102,103,104,105,106,108,109,110,113,134,135,136,138,139,140,143,144,145,148,149,150,151,159,174,187,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,130,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,-65,-60,-85,-66,-74,-67,-31,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'program':([0,1,3,4,5,7,8,10,12,13,14,19,25,36,39,205,226,227,],[-74,-75,-74,-74,-74,-4,-74,-2,24,-13,-74,-3,-12,-8,-5,-74,-14,-79,]),'bool':([6,9,11,45,117,],[17,17,17,17,17,]),'lp':([33,40,41,54,55,58,59,61,64,73,74,75,76,78,79,80,81,82,83,84,92,94,97,99,100,104,107,122,123,124,127,128,129,130,131,132,133,137,141,142,160,163,167,169,170,171,172,173,175,176,177,179,180,181,182,197,198,199,201,202,203,204,212,217,222,223,],[-74,45,-78,-74,-74,-74,80,-74,-74,-97,92,-83,93,97,-101,-74,99,-74,-48,107,-74,107,-74,-74,-47,-74,-74,-74,-74,-102,-74,107,-74,-74,-74,-74,-74,175,-74,-86,-74,-48,-51,-55,-53,-56,-52,-54,-74,-74,-74,-74,-74,-74,-74,-74,107,107,-74,-74,107,107,-74,-74,107,107,]),'print':([4,7,8,10,19,36,39,46,53,56,57,60,62,63,65,67,72,91,118,152,154,155,192,206,213,214,216,228,229,230,231,232,234,235,241,242,243,],[-74,-4,-74,-2,-3,-8,-5,61,-24,-25,-29,-26,-23,-27,61,-28,-20,-74,-74,-43,61,-100,-74,-74,-74,-41,-34,-42,-98,-33,-30,-74,-96,-39,-35,-105,-40,]),'rk':([4,7,8,10,19,36,39,46,52,53,56,57,60,62,63,65,66,67,72,86,91,118,152,154,155,183,192,206,213,214,216,228,229,230,231,232,234,235,241,242,243,],[-74,-4,-74,-2,-3,-8,-5,-74,72,-24,-25,-29,-26,-23,-27,-74,-22,-28,-20,-21,-74,-74,-43,-74,-100,205,-74,-74,-74,-41,-34,-42,-98,-33,-30,-74,-96,-39,-35,-105,-40,]),'function':([0,1,3,4,5,7,8,10,14,19,36,39,205,226,227,],[-74,-75,-74,-74,11,-4,-74,-2,11,-3,-8,-5,-74,-14,-79,]),'c_string':([64,75,80,82,83,84,92,94,97,99,100,107,112,114,122,123,124,127,128,129,130,131,132,133,141,142,160,163,167,169,170,171,172,173,175,176,177,179,180,181,182,197,198,199,201,202,203,204,212,217,222,223,],[-74,-83,-74,-74,-48,108,-74,108,-74,-74,-47,-74,108,108,-74,-74,-102,-74,108,-74,-74,-74,-74,-74,-74,-86,-74,-48,-51,-55,-53,-56,-52,-54,-74,-74,-74,-74,-74,-74,-74,-74,108,108,-74,-74,108,108,-74,-74,108,108,]),'return':([4,7,8,10,19,36,39,46,53,56,57,60,62,63,65,67,72,91,118,152,154,155,192,206,213,214,216,228,229,230,231,232,234,235,241,242,243,],[-74,-4,-74,-2,-3,-8,-5,64,-24,-25,-29,-26,-23,-27,64,-28,-20,-74,-74,-43,64,-100,-74,-74,-74,-41,-34,-42,-98,-33,-30,-74,-96,-39,-35,-105,-40,]),'rb':([79,96,101,103,104,105,106,108,109,110,113,121,134,135,136,138,139,140,143,144,145,148,149,150,151,159,174,187,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,-74,-74,-74,-74,-74,-74,-74,-74,159,-89,-72,-74,-57,-84,-73,-71,-69,-70,-65,-60,-85,-66,-74,-67,-31,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'void':([11,],[23,]),'else':([72,192,],[-20,215,]),'var':([0,1,3,4,8,36,39,91,],[-74,-75,9,9,9,-8,-5,9,]),'not':([64,75,80,92,97,99,107,122,123,124,141,142,160,175,179,180,197,201,202,212,217,],[82,-83,82,82,-74,82,-74,-74,82,-102,82,-86,82,-74,-74,-74,-74,82,82,82,82,]),'rp':([45,50,51,70,79,89,90,96,97,98,101,102,103,104,105,106,108,109,110,111,113,117,119,120,123,124,126,134,135,136,138,139,140,142,143,144,145,146,147,148,149,150,151,153,157,158,159,161,162,163,168,174,175,178,185,186,187,190,191,195,196,197,200,211,212,217,218,219,220,221,224,225,233,238,239,240,244,245,246,247,248,249,250,251,252,253,],[-74,-19,71,-74,-82,-17,-99,-32,-74,125,-64,-49,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,156,-74,-74,-102,166,-89,-72,-74,-57,-84,-73,-86,-71,-69,-70,-44,-93,-65,-60,-85,-66,-18,-74,-82,-74,189,-74,-38,-74,-67,-74,200,-80,207,-31,-36,-103,-50,-91,-74,-74,-104,-74,-74,-58,-59,-63,-87,-62,-61,-37,244,-74,-74,-74,-74,-74,-74,-45,-92,-46,-74,-68,-106,]),'true':([64,75,80,82,83,84,92,94,97,99,100,107,112,114,122,123,124,127,128,129,130,131,132,133,141,142,160,163,167,169,170,171,172,173,175,176,177,179,180,181,182,197,198,199,201,202,203,204,212,217,222,223,],[-74,-83,-74,-74,-48,106,-74,106,-74,-74,-47,-74,106,106,-74,-74,-102,-74,106,-74,-74,-74,-74,-74,-74,-86,-74,-48,-51,-55,-53,-56,-52,-54,-74,-74,-74,-74,-74,-74,-74,-74,106,106,-74,-74,106,106,-74,-74,106,106,]),'decimal':([6,9,11,45,117,],[16,16,16,16,16,]),'list':([0,1,3,4,8,36,39,91,],[-74,-75,6,6,6,-8,-5,6,]),'equal':([58,77,79,95,96,159,187,],[-74,-74,-82,122,-32,-74,-31,]),'or':([79,96,101,102,103,104,105,106,108,109,110,111,113,134,135,136,138,139,140,143,144,145,146,147,148,149,150,151,159,168,174,187,195,196,200,211,218,219,220,221,224,225,244,247,251,252,253,],[-82,-32,-64,-49,-74,-74,-74,-74,-74,-74,-74,-74,-74,-89,-72,-74,-57,-84,-73,-71,-69,-70,180,-93,-65,-60,-85,-66,-74,-74,-67,-31,-50,-91,-74,-104,-58,-59,-63,-87,-62,-61,-74,-74,-74,-68,-106,]),'while':([4,7,8,10,19,36,39,46,53,56,57,60,62,63,65,67,72,91,118,152,154,155,192,206,213,214,216,228,229,230,231,232,234,235,241,242,243,],[-74,-4,-74,-2,-3,-8,-5,54,-24,-25,-29,-26,-23,-27,54,-28,-20,-74,-74,-43,54,-100,-74,-74,-74,-41,-34,-42,-98,-33,-30,-74,-96,-39,-35,-105,-40,]),'plus':([64,75,79,80,82,83,84,92,94,96,97,99,100,101,103,104,105,106,107,108,109,110,113,122,123,124,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,148,149,150,151,159,160,163,167,169,170,171,172,173,174,175,176,177,179,180,181,182,187,197,198,199,200,201,202,203,204,211,212,217,220,221,222,223,224,225,244,247,251,252,253,],[-74,-83,-82,-74,-74,-48,112,-74,112,-32,-74,-74,-47,-64,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-102,-74,112,-74,-74,-74,-74,-74,-89,-72,-74,176,-84,-73,-74,-86,-71,-69,-70,-65,-60,-85,-66,-74,-74,-48,-51,-55,-53,-56,-52,-54,-67,-74,-74,-74,-74,-74,-74,-74,-31,-74,112,112,-74,-74,-74,112,112,-104,-74,-74,-63,-87,112,112,-62,-61,-74,-74,-74,-68,-106,]),'c_decimal':([64,75,80,82,83,84,92,94,97,99,100,107,112,114,122,123,124,127,128,129,130,131,132,133,141,142,160,163,167,169,170,171,172,173,175,176,177,179,180,181,182,197,198,199,201,202,203,204,212,217,222,223,],[-74,-83,-74,-74,-48,110,-74,110,-74,-74,-47,-74,110,110,-74,-74,-102,-74,110,-74,-74,-74,-74,-74,-74,-86,-74,-48,-51,-55,-53,-56,-52,-54,-74,-74,-74,-74,-74,-74,-74,-74,110,110,-74,-74,110,110,-74,-74,110,110,]),'$end':([2,47,68,69,72,87,88,],[0,-74,-74,-109,-20,-108,-1,]),'minus':([64,75,79,80,82,83,84,92,94,96,97,99,100,101,103,104,105,106,107,108,109,110,113,122,123,124,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,148,149,150,151,159,160,163,167,169,170,171,172,173,174,175,176,177,179,180,181,182,187,197,198,199,200,201,202,203,204,211,212,217,220,221,222,223,224,225,244,247,251,252,253,],[-74,-83,-82,-74,-74,-48,114,-74,114,-32,-74,-74,-47,-64,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-102,-74,114,-74,-74,-74,-74,-74,-89,-72,-74,177,-84,-73,-74,-86,-71,-69,-70,-65,-60,-85,-66,-74,-74,-48,-51,-55,-53,-56,-52,-54,-67,-74,-74,-74,-74,-74,-74,-74,-31,-74,114,114,-74,-74,-74,114,114,-104,-74,-74,-63,-87,114,114,-62,-61,-74,-74,-74,-68,-106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FUNCTIONS':([5,14,],[12,25,]),'ELSEBLOCK':([192,],[213,]),'RETURN':([46,65,154,],[57,57,57,]),'SEM_CODE_STARTS':([0,],[3,]),'FUNCCALL':([46,65,154,],[60,60,60,]),'SEM_ADD_PARAM':([70,],[89,]),'READ':([46,65,154,],[53,53,53,]),'FUNCTYPE':([11,],[22,]),'SEM_VERIFY_FUNC':([58,104,],[78,137,]),'SEM_VERIFY_NUM_PARAMS':([189,247,],[210,251,]),'SEM_PUSH_PAREN':([107,175,],[141,197,]),'PROGRAM':([0,],[2,]),'EXP':([84,94,128,198,199,222,223,],[102,121,168,218,219,102,102,]),'LISTDEC':([3,4,8,91,],[8,8,8,8,]),'PRINT':([46,65,154,],[56,56,56,]),'STATEMENTS':([46,65,154,],[52,86,183,]),'SEM_PUSH_START':([54,],[74,]),'SEM_RETURN':([85,],[115,]),'BLOCK':([43,164,184,236,],[47,192,206,243,]),'SEM_RESOLVE_NOT':([111,239,240,],[146,245,246,]),'TERM':([84,94,128,198,199,203,204,222,223,],[105,105,105,105,105,224,225,105,105,]),'SEM_RESOLVE_ANDOR':([245,246,],[248,250,]),'SEM_FILL_ERAS':([47,],[68,]),'SEM_RESOLVE_TIMESDIVIDE':([113,],[149,]),'SEM_MATCH_PARAM':([162,],[190,]),'DECLARATIONS':([3,4,8,91,],[5,10,19,118,]),'SEM_RESOLVE_PLUSMINUS':([105,],[138,]),'SEM_FILL_LOOP':([206,],[228,]),'SEM_GEN_READ':([157,],[186,]),'SEM_PROGRAM_STARTS':([35,],[43,]),'SEM_GEN_GOSUB':([232,],[241,]),'EXPRESSION':([64,80,92,99,123,141,160,212,217,],[85,98,119,126,162,178,188,162,162,]),'FUNCPARAMETERS':([45,117,],[51,153,]),'ASSIGN':([46,65,154,],[62,62,62,]),'empty':([0,3,4,5,8,14,15,16,17,23,31,33,35,45,46,47,54,55,58,61,64,65,68,70,77,80,82,85,91,92,97,99,103,104,105,106,107,108,109,110,111,113,117,118,120,122,123,125,127,129,130,131,132,133,136,141,154,156,157,159,160,162,166,168,175,176,177,179,180,181,182,188,189,192,197,200,201,202,205,206,212,213,215,217,232,239,240,244,245,246,247,251,],[1,7,7,13,7,13,27,27,27,27,38,41,42,50,66,69,73,75,79,75,83,66,87,90,96,83,75,116,7,83,124,83,134,79,139,134,142,134,134,134,147,150,50,155,158,75,163,165,75,75,75,75,75,75,96,83,66,165,185,96,83,191,194,196,142,75,75,75,75,75,75,208,211,214,124,221,83,83,227,229,163,234,237,163,242,147,147,221,249,249,211,253,]),'SEM_ASSIGN':([188,],[209,]),'FUNCTION':([5,14,],[14,14,]),'SEM_PUSH_CONSTANT':([103,106,108,109,110,],[135,140,143,144,145,]),'SEM_GEN_GOTOF':([125,156,],[164,184,]),'RELOP':([102,],[128,]),'SEM_ADD_FUNC':([33,],[40,]),'SEM_END_FUNC':([205,],[226,]),'SEM_PUSH_OPERAND':([58,104,120,],[77,136,157,]),'NOT':([64,80,92,99,123,141,160,201,202,212,217,],[84,84,84,84,84,84,84,222,223,84,84,]),'CONSTANT':([84,94,112,114,128,198,199,203,204,222,223,],[101,101,148,151,101,101,101,101,101,101,101,]),'SEM_FILL_END':([213,],[235,]),'STATEMENT':([46,65,154,],[65,65,65,]),'SEM_PUSH_OPERATOR':([55,61,82,122,127,129,130,131,132,133,176,177,179,180,181,182,],[76,81,100,160,167,169,170,171,172,173,198,199,201,202,203,204,]),'SEM_GEN_GOSUB_ASSIGN':([251,],[252,]),'SEM_RESOLVE_RELOP':([168,],[195,]),'SEM_GENANDFILL_GOTO':([215,],[236,]),'LISTINDEX':([77,136,159,],[95,174,187,]),'SEM_PROGRAM_END':([68,],[88,]),'TYPE':([6,9,11,45,117,],[18,20,21,49,49,]),'VARDEC':([3,4,8,91,],[4,4,4,4,]),'SEM_GEN_ERA':([97,197,],[123,217,]),'SUPEREXP':([84,222,223,],[111,239,240,]),'SEM_PRINT':([166,],[193,]),'VARIDS':([18,20,44,],[30,32,48,]),'CALLPARAMETERS':([123,212,217,],[161,233,238,]),'CONDITION':([46,65,154,],[63,63,63,]),'FACTOR':([84,94,128,198,199,203,204,222,223,],[113,113,113,113,113,113,113,113,113,]),'SEM_ADD_VAR':([31,],[37,]),'SEM_ADD_FUNC_START':([118,],[154,]),'SEM_STORE_TYPE':([15,16,17,23,],[26,28,29,34,]),'SEM_POP_PAREN':([200,244,],[220,247,]),'LOOP':([46,65,154,],[67,67,67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> SEM_CODE_STARTS DECLARATIONS FUNCTIONS program id SEM_PROGRAM_STARTS BLOCK SEM_FILL_ERAS SEM_PROGRAM_END','PROGRAM',9,'p_PROGRAM','Higo.py',157),
  ('DECLARATIONS -> VARDEC DECLARATIONS','DECLARATIONS',2,'p_DECLARATIONS','Higo.py',161),
  ('DECLARATIONS -> LISTDEC DECLARATIONS','DECLARATIONS',2,'p_DECLARATIONS','Higo.py',162),
  ('DECLARATIONS -> empty','DECLARATIONS',1,'p_DECLARATIONS','Higo.py',163),
  ('VARDEC -> var TYPE VARIDS semicolon','VARDEC',4,'p_VARDEC','Higo.py',166),
  ('VARIDS -> id SEM_ADD_VAR','VARIDS',2,'p_VARIDS','Higo.py',169),
  ('VARIDS -> id SEM_ADD_VAR comma VARIDS','VARIDS',4,'p_VARIDS','Higo.py',170),
  ('LISTDEC -> list TYPE VARIDS semicolon','LISTDEC',4,'p_LISTDEC','Higo.py',173),
  ('TYPE -> int SEM_STORE_TYPE','TYPE',2,'p_TYPE','Higo.py',176),
  ('TYPE -> decimal SEM_STORE_TYPE','TYPE',2,'p_TYPE','Higo.py',177),
  ('TYPE -> bool SEM_STORE_TYPE','TYPE',2,'p_TYPE','Higo.py',178),
  ('FUNCTIONS -> FUNCTION FUNCTIONS','FUNCTIONS',2,'p_FUNCTIONS','Higo.py',181),
  ('FUNCTIONS -> empty','FUNCTIONS',1,'p_FUNCTIONS','Higo.py',182),
  ('FUNCTION -> function FUNCTYPE id SEM_ADD_FUNC lp FUNCPARAMETERS rp lk DECLARATIONS SEM_ADD_FUNC_START STATEMENTS rk SEM_END_FUNC','FUNCTION',13,'p_FUNCTION','Higo.py',185),
  ('FUNCTYPE -> void SEM_STORE_TYPE','FUNCTYPE',2,'p_FUNCTYPE','Higo.py',188),
  ('FUNCTYPE -> TYPE','FUNCTYPE',1,'p_FUNCTYPE','Higo.py',189),
  ('FUNCPARAMETERS -> TYPE id SEM_ADD_PARAM','FUNCPARAMETERS',3,'p_FUNCPARAMETERS','Higo.py',192),
  ('FUNCPARAMETERS -> TYPE id SEM_ADD_PARAM comma FUNCPARAMETERS','FUNCPARAMETERS',5,'p_FUNCPARAMETERS','Higo.py',193),
  ('FUNCPARAMETERS -> empty','FUNCPARAMETERS',1,'p_FUNCPARAMETERS','Higo.py',194),
  ('BLOCK -> lk STATEMENTS rk','BLOCK',3,'p_BLOCK','Higo.py',197),
  ('STATEMENTS -> STATEMENT STATEMENTS','STATEMENTS',2,'p_STATEMENTS','Higo.py',200),
  ('STATEMENTS -> empty','STATEMENTS',1,'p_STATEMENTS','Higo.py',201),
  ('STATEMENT -> ASSIGN','STATEMENT',1,'p_STATEMENT','Higo.py',204),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','Higo.py',205),
  ('STATEMENT -> PRINT','STATEMENT',1,'p_STATEMENT','Higo.py',206),
  ('STATEMENT -> FUNCCALL','STATEMENT',1,'p_STATEMENT','Higo.py',207),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','Higo.py',208),
  ('STATEMENT -> LOOP','STATEMENT',1,'p_STATEMENT','Higo.py',209),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','Higo.py',210),
  ('ASSIGN -> id SEM_PUSH_OPERAND LISTINDEX equal SEM_PUSH_OPERATOR EXPRESSION SEM_ASSIGN semicolon','ASSIGN',8,'p_ASSIGN','Higo.py',213),
  ('LISTINDEX -> lb EXP rb LISTINDEX','LISTINDEX',4,'p_LISTINDEX','Higo.py',216),
  ('LISTINDEX -> empty','LISTINDEX',1,'p_LISTINDEX','Higo.py',217),
  ('READ -> readto SEM_PUSH_OPERATOR lp id SEM_PUSH_OPERAND SEM_GEN_READ rp semicolon','READ',8,'p_READ','Higo.py',220),
  ('PRINT -> print SEM_PUSH_OPERATOR lp EXPRESSION rp SEM_PRINT semicolon','PRINT',7,'p_PRINT','Higo.py',223),
  ('FUNCCALL -> id SEM_VERIFY_FUNC lp SEM_GEN_ERA CALLPARAMETERS rp SEM_VERIFY_NUM_PARAMS semicolon SEM_GEN_GOSUB','FUNCCALL',9,'p_FUNCCALL','Higo.py',226),
  ('CALLPARAMETERS -> EXPRESSION SEM_MATCH_PARAM','CALLPARAMETERS',2,'p_CALLPARAMETERS','Higo.py',229),
  ('CALLPARAMETERS -> EXPRESSION SEM_MATCH_PARAM comma CALLPARAMETERS','CALLPARAMETERS',4,'p_CALLPARAMETERS','Higo.py',230),
  ('CALLPARAMETERS -> empty','CALLPARAMETERS',1,'p_CALLPARAMETERS','Higo.py',231),
  ('CONDITION -> if lp EXPRESSION rp SEM_GEN_GOTOF BLOCK ELSEBLOCK SEM_FILL_END','CONDITION',8,'p_CONDITION','Higo.py',234),
  ('ELSEBLOCK -> else SEM_GENANDFILL_GOTO BLOCK','ELSEBLOCK',3,'p_ELSEBLOCK','Higo.py',237),
  ('ELSEBLOCK -> empty','ELSEBLOCK',1,'p_ELSEBLOCK','Higo.py',238),
  ('LOOP -> while SEM_PUSH_START lp EXPRESSION rp SEM_GEN_GOTOF BLOCK SEM_FILL_LOOP','LOOP',8,'p_LOOP','Higo.py',241),
  ('RETURN -> return EXPRESSION SEM_RETURN semicolon','RETURN',4,'p_RETURN','Higo.py',244),
  ('EXPRESSION -> NOT SUPEREXP SEM_RESOLVE_NOT','EXPRESSION',3,'p_EXPRESSION','Higo.py',247),
  ('EXPRESSION -> NOT SUPEREXP SEM_RESOLVE_NOT and SEM_PUSH_OPERATOR NOT SUPEREXP SEM_RESOLVE_NOT SEM_RESOLVE_ANDOR','EXPRESSION',9,'p_EXPRESSION','Higo.py',248),
  ('EXPRESSION -> NOT SUPEREXP SEM_RESOLVE_NOT or SEM_PUSH_OPERATOR NOT SUPEREXP SEM_RESOLVE_NOT SEM_RESOLVE_ANDOR','EXPRESSION',9,'p_EXPRESSION','Higo.py',249),
  ('NOT -> not SEM_PUSH_OPERATOR','NOT',2,'p_NOT','Higo.py',252),
  ('NOT -> empty','NOT',1,'p_NOT','Higo.py',253),
  ('SUPEREXP -> EXP','SUPEREXP',1,'p_SUPEREXP','Higo.py',256),
  ('SUPEREXP -> EXP RELOP EXP SEM_RESOLVE_RELOP','SUPEREXP',4,'p_SUPEREXP','Higo.py',257),
  ('RELOP -> gt SEM_PUSH_OPERATOR','RELOP',2,'p_RELOP','Higo.py',260),
  ('RELOP -> ge SEM_PUSH_OPERATOR','RELOP',2,'p_RELOP','Higo.py',261),
  ('RELOP -> lt SEM_PUSH_OPERATOR','RELOP',2,'p_RELOP','Higo.py',262),
  ('RELOP -> le SEM_PUSH_OPERATOR','RELOP',2,'p_RELOP','Higo.py',263),
  ('RELOP -> ee SEM_PUSH_OPERATOR','RELOP',2,'p_RELOP','Higo.py',264),
  ('RELOP -> ne SEM_PUSH_OPERATOR','RELOP',2,'p_RELOP','Higo.py',265),
  ('EXP -> TERM SEM_RESOLVE_PLUSMINUS','EXP',2,'p_EXP','Higo.py',268),
  ('EXP -> TERM SEM_RESOLVE_PLUSMINUS plus SEM_PUSH_OPERATOR EXP','EXP',5,'p_EXP','Higo.py',269),
  ('EXP -> TERM SEM_RESOLVE_PLUSMINUS minus SEM_PUSH_OPERATOR EXP','EXP',5,'p_EXP','Higo.py',270),
  ('TERM -> FACTOR SEM_RESOLVE_TIMESDIVIDE','TERM',2,'p_TERM','Higo.py',273),
  ('TERM -> FACTOR SEM_RESOLVE_TIMESDIVIDE times SEM_PUSH_OPERATOR TERM','TERM',5,'p_TERM','Higo.py',274),
  ('TERM -> FACTOR SEM_RESOLVE_TIMESDIVIDE divide SEM_PUSH_OPERATOR TERM','TERM',5,'p_TERM','Higo.py',275),
  ('FACTOR -> lp SEM_PUSH_PAREN EXPRESSION rp SEM_POP_PAREN','FACTOR',5,'p_FACTOR','Higo.py',278),
  ('FACTOR -> CONSTANT','FACTOR',1,'p_FACTOR','Higo.py',279),
  ('FACTOR -> plus CONSTANT','FACTOR',2,'p_FACTOR','Higo.py',280),
  ('FACTOR -> minus CONSTANT','FACTOR',2,'p_FACTOR','Higo.py',281),
  ('CONSTANT -> id SEM_PUSH_OPERAND LISTINDEX','CONSTANT',3,'p_CONSTANT','Higo.py',284),
  ('CONSTANT -> id SEM_VERIFY_FUNC lp SEM_PUSH_PAREN SEM_GEN_ERA CALLPARAMETERS rp SEM_POP_PAREN SEM_VERIFY_NUM_PARAMS SEM_GEN_GOSUB_ASSIGN','CONSTANT',10,'p_CONSTANT','Higo.py',285),
  ('CONSTANT -> c_int SEM_PUSH_CONSTANT','CONSTANT',2,'p_CONSTANT','Higo.py',286),
  ('CONSTANT -> c_decimal SEM_PUSH_CONSTANT','CONSTANT',2,'p_CONSTANT','Higo.py',287),
  ('CONSTANT -> c_string SEM_PUSH_CONSTANT','CONSTANT',2,'p_CONSTANT','Higo.py',288),
  ('CONSTANT -> false SEM_PUSH_CONSTANT','CONSTANT',2,'p_CONSTANT','Higo.py',289),
  ('CONSTANT -> true SEM_PUSH_CONSTANT','CONSTANT',2,'p_CONSTANT','Higo.py',290),
  ('empty -> <empty>','empty',0,'p_empty','Higo.py',293),
  ('SEM_CODE_STARTS -> empty','SEM_CODE_STARTS',1,'p_SEM_CODE_STARTS','Higo.py',303),
  ('SEM_PROGRAM_STARTS -> empty','SEM_PROGRAM_STARTS',1,'p_SEM_PROGRAM_STARTS','Higo.py',319),
  ('SEM_STORE_TYPE -> empty','SEM_STORE_TYPE',1,'p_SEM_STORE_TYPE','Higo.py',327),
  ('SEM_ADD_FUNC -> empty','SEM_ADD_FUNC',1,'p_SEM_ADD_FUNC','Higo.py',343),
  ('SEM_END_FUNC -> empty','SEM_END_FUNC',1,'p_SEM_END_FUNC','Higo.py',365),
  ('SEM_GEN_READ -> empty','SEM_GEN_READ',1,'p_SEM_GEN_READ','Higo.py',374),
  ('SEM_ADD_VAR -> empty','SEM_ADD_VAR',1,'p_SEM_ADD_VAR','Higo.py',385),
  ('SEM_PUSH_OPERAND -> empty','SEM_PUSH_OPERAND',1,'p_SEM_PUSH_OPERAND','Higo.py',402),
  ('SEM_PUSH_OPERATOR -> empty','SEM_PUSH_OPERATOR',1,'p_SEM_PUSH_OPERATOR','Higo.py',425),
  ('SEM_RESOLVE_PLUSMINUS -> empty','SEM_RESOLVE_PLUSMINUS',1,'p_SEM_RESOLVE_PLUSMINUS','Higo.py',434),
  ('SEM_RESOLVE_TIMESDIVIDE -> empty','SEM_RESOLVE_TIMESDIVIDE',1,'p_SEM_RESOLVE_TIMESDIVIDE','Higo.py',456),
  ('SEM_PUSH_PAREN -> empty','SEM_PUSH_PAREN',1,'p_SEM_PUSH_PAREN','Higo.py',478),
  ('SEM_POP_PAREN -> empty','SEM_POP_PAREN',1,'p_SEM_POP_PAREN','Higo.py',482),
  ('SEM_ASSIGN -> empty','SEM_ASSIGN',1,'p_SEM_ASSIGN','Higo.py',486),
  ('SEM_PUSH_CONSTANT -> empty','SEM_PUSH_CONSTANT',1,'p_SEM_PUSH_CONSTANT','Higo.py',499),
  ('SEM_PRINT -> empty','SEM_PRINT',1,'p_SEM_PRINT','Higo.py',524),
  ('SEM_RESOLVE_RELOP -> empty','SEM_RESOLVE_RELOP',1,'p_SEM_RESOLVE_RELOP','Higo.py',533),
  ('SEM_RESOLVE_ANDOR -> empty','SEM_RESOLVE_ANDOR',1,'p_SEM_RESOLVE_ANDOR','Higo.py',555),
  ('SEM_RESOLVE_NOT -> empty','SEM_RESOLVE_NOT',1,'p_SEM_RESOLVE_NOT','Higo.py',577),
  ('SEM_GEN_GOTOF -> empty','SEM_GEN_GOTOF',1,'p_SEM_GEN_GOTOF','Higo.py',597),
  ('SEM_GENANDFILL_GOTO -> empty','SEM_GENANDFILL_GOTO',1,'p_SEM_GENANDFILL_GOTO','Higo.py',614),
  ('SEM_FILL_END -> empty','SEM_FILL_END',1,'p_SEM_FILL_END','Higo.py',623),
  ('SEM_PUSH_START -> empty','SEM_PUSH_START',1,'p_SEM_PUSH_START','Higo.py',629),
  ('SEM_FILL_LOOP -> empty','SEM_FILL_LOOP',1,'p_SEM_FILL_LOOP','Higo.py',633),
  ('SEM_ADD_PARAM -> empty','SEM_ADD_PARAM',1,'p_SEM_ADD_PARAM','Higo.py',644),
  ('SEM_ADD_FUNC_START -> empty','SEM_ADD_FUNC_START',1,'p_SEM_ADD_FUNC_START','Higo.py',652),
  ('SEM_VERIFY_FUNC -> empty','SEM_VERIFY_FUNC',1,'p_SEM_VERIFY_FUNC','Higo.py',656),
  ('SEM_GEN_ERA -> empty','SEM_GEN_ERA',1,'p_SEM_GEN_ERA','Higo.py',667),
  ('SEM_MATCH_PARAM -> empty','SEM_MATCH_PARAM',1,'p_SEM_MATCH_PARAM','Higo.py',683),
  ('SEM_VERIFY_NUM_PARAMS -> empty','SEM_VERIFY_NUM_PARAMS',1,'p_SEM_VERIFY_NUM_PARAMS','Higo.py',698),
  ('SEM_GEN_GOSUB -> empty','SEM_GEN_GOSUB',1,'p_SEM_GEN_GOSUB','Higo.py',704),
  ('SEM_GEN_GOSUB_ASSIGN -> empty','SEM_GEN_GOSUB_ASSIGN',1,'p_SEM_GEN_GOSUB_ASSIGN','Higo.py',710),
  ('SEM_RETURN -> empty','SEM_RETURN',1,'p_SEM_RETURN','Higo.py',724),
  ('SEM_PROGRAM_END -> empty','SEM_PROGRAM_END',1,'p_SEM_PROGRAM_END','Higo.py',751),
  ('SEM_FILL_ERAS -> empty','SEM_FILL_ERAS',1,'p_SEM_FILL_ERAS','Higo.py',772),
]
